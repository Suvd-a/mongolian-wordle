{"ast":null,"code":"import _toConsumableArray from\"/Users/suvdaa/wordle_zone/mongolian-wordle/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"/Users/suvdaa/wordle_zone/mongolian-wordle/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{InformationCircleIcon,ChartBarIcon,SunIcon}from'@heroicons/react/outline';import{useState,useEffect}from'react';import{Alert}from'./components/alerts/Alert';import{Grid}from'./components/grid/Grid';import{Keyboard}from'./components/keyboard/Keyboard';import{AboutModal}from'./components/modals/AboutModal';import{InfoModal}from'./components/modals/InfoModal';import{StatsModal}from'./components/modals/StatsModal';import{GAME_TITLE,WIN_MESSAGES,GAME_COPIED_MESSAGE,ABOUT_GAME_MESSAGE,NOT_ENOUGH_LETTERS_MESSAGE,WORD_NOT_FOUND_MESSAGE,CORRECT_WORD_MESSAGE}from'./constants/strings';import{isWordInWordList,isWinningWord,solution}from'./lib/words';import{addStatsForCompletedGame,loadStats}from'./lib/stats';import{loadGameStateFromLocalStorage,saveGameStateToLocalStorage}from'./lib/localStorage';import'./App.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ALERT_TIME_MS=2000;function App(){var prefersDarkMode=window.matchMedia('(prefers-color-scheme: dark)').matches;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),currentGuess=_useState2[0],setCurrentGuess=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isGameWon=_useState4[0],setIsGameWon=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),isInfoModalOpen=_useState6[0],setIsInfoModalOpen=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),isAboutModalOpen=_useState8[0],setIsAboutModalOpen=_useState8[1];var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),isNotEnoughLetters=_useState10[0],setIsNotEnoughLetters=_useState10[1];var _useState11=useState(false),_useState12=_slicedToArray(_useState11,2),isStatsModalOpen=_useState12[0],setIsStatsModalOpen=_useState12[1];var _useState13=useState(false),_useState14=_slicedToArray(_useState13,2),isWordNotFoundAlertOpen=_useState14[0],setIsWordNotFoundAlertOpen=_useState14[1];var _useState15=useState(false),_useState16=_slicedToArray(_useState15,2),isGameLost=_useState16[0],setIsGameLost=_useState16[1];var _useState17=useState(localStorage.getItem('theme')?localStorage.getItem('theme')==='dark':prefersDarkMode?true:false),_useState18=_slicedToArray(_useState17,2),isDarkMode=_useState18[0],setIsDarkMode=_useState18[1];var _useState19=useState(''),_useState20=_slicedToArray(_useState19,2),successAlert=_useState20[0],setSuccessAlert=_useState20[1];var _useState21=useState(function(){var loaded=loadGameStateFromLocalStorage();if((loaded===null||loaded===void 0?void 0:loaded.solution)!==solution){return[];}var gameWasWon=loaded.guesses.includes(solution);if(gameWasWon){setIsGameWon(true);}if(loaded.guesses.length===6&&!gameWasWon){setIsGameLost(true);}return loaded.guesses;}),_useState22=_slicedToArray(_useState21,2),guesses=_useState22[0],setGuesses=_useState22[1];var _useState23=useState(function(){return loadStats();}),_useState24=_slicedToArray(_useState23,2),stats=_useState24[0],setStats=_useState24[1];useEffect(function(){if(isDarkMode){document.documentElement.classList.add('dark');}else{document.documentElement.classList.remove('dark');}},[isDarkMode]);var handleDarkMode=function handleDarkMode(isDark){setIsDarkMode(isDark);localStorage.setItem('theme',isDark?'dark':'light');};useEffect(function(){saveGameStateToLocalStorage({guesses:guesses,solution:solution});},[guesses]);useEffect(function(){if(isGameWon){setSuccessAlert(WIN_MESSAGES[Math.floor(Math.random()*WIN_MESSAGES.length)]);setTimeout(function(){setSuccessAlert('');setIsStatsModalOpen(true);},ALERT_TIME_MS);}if(isGameLost){setTimeout(function(){setIsStatsModalOpen(true);},ALERT_TIME_MS);}},[isGameWon,isGameLost]);var onChar=function onChar(value){if(currentGuess.length<5&&guesses.length<6&&!isGameWon){setCurrentGuess(\"\".concat(currentGuess).concat(value));}};var onDelete=function onDelete(){setCurrentGuess(currentGuess.slice(0,-1));};var onEnter=function onEnter(){if(isGameWon||isGameLost){return;}if(!(currentGuess.length===5)){setIsNotEnoughLetters(true);return setTimeout(function(){setIsNotEnoughLetters(false);},ALERT_TIME_MS);}if(!isWordInWordList(currentGuess)){setIsWordNotFoundAlertOpen(true);return setTimeout(function(){setIsWordNotFoundAlertOpen(false);},ALERT_TIME_MS);}var winningWord=isWinningWord(currentGuess);if(currentGuess.length===5&&guesses.length<6&&!isGameWon){setGuesses([].concat(_toConsumableArray(guesses),[currentGuess]));setCurrentGuess('');if(winningWord){setStats(addStatsForCompletedGame(stats,guesses.length));return setIsGameWon(true);}if(guesses.length===5){setStats(addStatsForCompletedGame(stats,guesses.length+1));setIsGameLost(true);}}};return/*#__PURE__*/_jsxs(\"div\",{className:\"py-8 max-w-7xl mx-auto sm:px-6 lg:px-8\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex w-80 mx-auto items-center mb-8 mt-12\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-xl grow font-bold dark:text-white\",children:GAME_TITLE}),/*#__PURE__*/_jsx(SunIcon,{className:\"h-6 w-6 cursor-pointer dark:stroke-white\",onClick:function onClick(){return handleDarkMode(!isDarkMode);}}),/*#__PURE__*/_jsx(InformationCircleIcon,{className:\"h-6 w-6 cursor-pointer dark:stroke-white\",onClick:function onClick(){return setIsInfoModalOpen(true);}}),/*#__PURE__*/_jsx(ChartBarIcon,{className:\"h-6 w-6 cursor-pointer dark:stroke-white\",onClick:function onClick(){return setIsStatsModalOpen(true);}})]}),/*#__PURE__*/_jsx(Grid,{guesses:guesses,currentGuess:currentGuess}),/*#__PURE__*/_jsx(Keyboard,{onChar:onChar,onDelete:onDelete,onEnter:onEnter,guesses:guesses}),/*#__PURE__*/_jsx(InfoModal,{isOpen:isInfoModalOpen,handleClose:function handleClose(){return setIsInfoModalOpen(false);}}),/*#__PURE__*/_jsx(StatsModal,{isOpen:isStatsModalOpen,handleClose:function handleClose(){return setIsStatsModalOpen(false);},guesses:guesses,gameStats:stats,isGameLost:isGameLost,isGameWon:isGameWon,handleShare:function handleShare(){setSuccessAlert(GAME_COPIED_MESSAGE);return setTimeout(function(){return setSuccessAlert('');},ALERT_TIME_MS);}}),/*#__PURE__*/_jsx(AboutModal,{isOpen:isAboutModalOpen,handleClose:function handleClose(){return setIsAboutModalOpen(false);}}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"mx-auto mt-8 flex items-center px-2.5 py-1.5 border border-transparent text-xs font-medium rounded text-indigo-700 bg-indigo-100 hover:bg-indigo-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 select-none\",onClick:function onClick(){return setIsAboutModalOpen(true);},children:ABOUT_GAME_MESSAGE}),/*#__PURE__*/_jsx(Alert,{message:NOT_ENOUGH_LETTERS_MESSAGE,isOpen:isNotEnoughLetters}),/*#__PURE__*/_jsx(Alert,{message:WORD_NOT_FOUND_MESSAGE,isOpen:isWordNotFoundAlertOpen}),/*#__PURE__*/_jsx(Alert,{message:CORRECT_WORD_MESSAGE(solution),isOpen:isGameLost}),/*#__PURE__*/_jsx(Alert,{message:successAlert,isOpen:successAlert!=='',variant:\"success\"})]});}export default App;","map":{"version":3,"sources":["/Users/suvdaa/wordle_zone/mongolian-wordle/src/App.tsx"],"names":["InformationCircleIcon","ChartBarIcon","SunIcon","useState","useEffect","Alert","Grid","Keyboard","AboutModal","InfoModal","StatsModal","GAME_TITLE","WIN_MESSAGES","GAME_COPIED_MESSAGE","ABOUT_GAME_MESSAGE","NOT_ENOUGH_LETTERS_MESSAGE","WORD_NOT_FOUND_MESSAGE","CORRECT_WORD_MESSAGE","isWordInWordList","isWinningWord","solution","addStatsForCompletedGame","loadStats","loadGameStateFromLocalStorage","saveGameStateToLocalStorage","ALERT_TIME_MS","App","prefersDarkMode","window","matchMedia","matches","currentGuess","setCurrentGuess","isGameWon","setIsGameWon","isInfoModalOpen","setIsInfoModalOpen","isAboutModalOpen","setIsAboutModalOpen","isNotEnoughLetters","setIsNotEnoughLetters","isStatsModalOpen","setIsStatsModalOpen","isWordNotFoundAlertOpen","setIsWordNotFoundAlertOpen","isGameLost","setIsGameLost","localStorage","getItem","isDarkMode","setIsDarkMode","successAlert","setSuccessAlert","loaded","gameWasWon","guesses","includes","length","setGuesses","stats","setStats","document","documentElement","classList","add","remove","handleDarkMode","isDark","setItem","Math","floor","random","setTimeout","onChar","value","onDelete","slice","onEnter","winningWord"],"mappings":"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","sourcesContent":["import {\n  InformationCircleIcon,\n  ChartBarIcon,\n  SunIcon,\n} from '@heroicons/react/outline'\nimport { useState, useEffect } from 'react'\nimport { Alert } from './components/alerts/Alert'\nimport { Grid } from './components/grid/Grid'\nimport { Keyboard } from './components/keyboard/Keyboard'\nimport { AboutModal } from './components/modals/AboutModal'\nimport { InfoModal } from './components/modals/InfoModal'\nimport { StatsModal } from './components/modals/StatsModal'\nimport {\n  GAME_TITLE,\n  WIN_MESSAGES,\n  GAME_COPIED_MESSAGE,\n  ABOUT_GAME_MESSAGE,\n  NOT_ENOUGH_LETTERS_MESSAGE,\n  WORD_NOT_FOUND_MESSAGE,\n  CORRECT_WORD_MESSAGE,\n} from './constants/strings'\nimport { isWordInWordList, isWinningWord, solution } from './lib/words'\nimport { addStatsForCompletedGame, loadStats } from './lib/stats'\nimport {\n  loadGameStateFromLocalStorage,\n  saveGameStateToLocalStorage,\n} from './lib/localStorage'\n\nimport './App.css'\n\nconst ALERT_TIME_MS = 2000\n\nfunction App() {\n  const prefersDarkMode = window.matchMedia(\n    '(prefers-color-scheme: dark)'\n  ).matches\n\n  const [currentGuess, setCurrentGuess] = useState('')\n  const [isGameWon, setIsGameWon] = useState(false)\n  const [isInfoModalOpen, setIsInfoModalOpen] = useState(false)\n  const [isAboutModalOpen, setIsAboutModalOpen] = useState(false)\n  const [isNotEnoughLetters, setIsNotEnoughLetters] = useState(false)\n  const [isStatsModalOpen, setIsStatsModalOpen] = useState(false)\n  const [isWordNotFoundAlertOpen, setIsWordNotFoundAlertOpen] = useState(false)\n  const [isGameLost, setIsGameLost] = useState(false)\n  const [isDarkMode, setIsDarkMode] = useState(\n    localStorage.getItem('theme')\n      ? localStorage.getItem('theme') === 'dark'\n      : prefersDarkMode\n      ? true\n      : false\n  )\n  const [successAlert, setSuccessAlert] = useState('')\n  const [guesses, setGuesses] = useState<string[]>(() => {\n    const loaded = loadGameStateFromLocalStorage()\n    if (loaded?.solution !== solution) {\n      return []\n    }\n    const gameWasWon = loaded.guesses.includes(solution)\n    if (gameWasWon) {\n      setIsGameWon(true)\n    }\n    if (loaded.guesses.length === 6 && !gameWasWon) {\n      setIsGameLost(true)\n    }\n    return loaded.guesses\n  })\n\n  const [stats, setStats] = useState(() => loadStats())\n\n  useEffect(() => {\n    if (isDarkMode) {\n      document.documentElement.classList.add('dark')\n    } else {\n      document.documentElement.classList.remove('dark')\n    }\n  }, [isDarkMode])\n\n  const handleDarkMode = (isDark: boolean) => {\n    setIsDarkMode(isDark)\n    localStorage.setItem('theme', isDark ? 'dark' : 'light')\n  }\n\n  useEffect(() => {\n    saveGameStateToLocalStorage({ guesses, solution })\n  }, [guesses])\n\n  useEffect(() => {\n    if (isGameWon) {\n      setSuccessAlert(\n        WIN_MESSAGES[Math.floor(Math.random() * WIN_MESSAGES.length)]\n      )\n      setTimeout(() => {\n        setSuccessAlert('')\n        setIsStatsModalOpen(true)\n      }, ALERT_TIME_MS)\n    }\n    if (isGameLost) {\n      setTimeout(() => {\n        setIsStatsModalOpen(true)\n      }, ALERT_TIME_MS)\n    }\n  }, [isGameWon, isGameLost])\n\n  const onChar = (value: string) => {\n    if (currentGuess.length < 5 && guesses.length < 6 && !isGameWon) {\n      setCurrentGuess(`${currentGuess}${value}`)\n    }\n  }\n\n  const onDelete = () => {\n    setCurrentGuess(currentGuess.slice(0, -1))\n  }\n\n  const onEnter = () => {\n    if (isGameWon || isGameLost) {\n      return\n    }\n    if (!(currentGuess.length === 5)) {\n      setIsNotEnoughLetters(true)\n      return setTimeout(() => {\n        setIsNotEnoughLetters(false)\n      }, ALERT_TIME_MS)\n    }\n\n    if (!isWordInWordList(currentGuess)) {\n      setIsWordNotFoundAlertOpen(true)\n      return setTimeout(() => {\n        setIsWordNotFoundAlertOpen(false)\n      }, ALERT_TIME_MS)\n    }\n\n    const winningWord = isWinningWord(currentGuess)\n\n    if (currentGuess.length === 5 && guesses.length < 6 && !isGameWon) {\n      setGuesses([...guesses, currentGuess])\n      setCurrentGuess('')\n\n      if (winningWord) {\n        setStats(addStatsForCompletedGame(stats, guesses.length))\n        return setIsGameWon(true)\n      }\n\n      if (guesses.length === 5) {\n        setStats(addStatsForCompletedGame(stats, guesses.length + 1))\n        setIsGameLost(true)\n      }\n    }\n  }\n\n  return (\n    <div className=\"py-8 max-w-7xl mx-auto sm:px-6 lg:px-8\">\n      <div className=\"flex w-80 mx-auto items-center mb-8 mt-12\">\n        <h1 className=\"text-xl grow font-bold dark:text-white\">{GAME_TITLE}</h1>\n        <SunIcon\n          className=\"h-6 w-6 cursor-pointer dark:stroke-white\"\n          onClick={() => handleDarkMode(!isDarkMode)}\n        />\n        <InformationCircleIcon\n          className=\"h-6 w-6 cursor-pointer dark:stroke-white\"\n          onClick={() => setIsInfoModalOpen(true)}\n        />\n        <ChartBarIcon\n          className=\"h-6 w-6 cursor-pointer dark:stroke-white\"\n          onClick={() => setIsStatsModalOpen(true)}\n        />\n      </div>\n      <Grid guesses={guesses} currentGuess={currentGuess} />\n      <Keyboard\n        onChar={onChar}\n        onDelete={onDelete}\n        onEnter={onEnter}\n        guesses={guesses}\n      />\n      <InfoModal\n        isOpen={isInfoModalOpen}\n        handleClose={() => setIsInfoModalOpen(false)}\n      />\n      <StatsModal\n        isOpen={isStatsModalOpen}\n        handleClose={() => setIsStatsModalOpen(false)}\n        guesses={guesses}\n        gameStats={stats}\n        isGameLost={isGameLost}\n        isGameWon={isGameWon}\n        handleShare={() => {\n          setSuccessAlert(GAME_COPIED_MESSAGE)\n          return setTimeout(() => setSuccessAlert(''), ALERT_TIME_MS)\n        }}\n      />\n      <AboutModal\n        isOpen={isAboutModalOpen}\n        handleClose={() => setIsAboutModalOpen(false)}\n      />\n\n      <button\n        type=\"button\"\n        className=\"mx-auto mt-8 flex items-center px-2.5 py-1.5 border border-transparent text-xs font-medium rounded text-indigo-700 bg-indigo-100 hover:bg-indigo-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 select-none\"\n        onClick={() => setIsAboutModalOpen(true)}\n      >\n        {ABOUT_GAME_MESSAGE}\n      </button>\n\n      <Alert message={NOT_ENOUGH_LETTERS_MESSAGE} isOpen={isNotEnoughLetters} />\n      <Alert\n        message={WORD_NOT_FOUND_MESSAGE}\n        isOpen={isWordNotFoundAlertOpen}\n      />\n      <Alert message={CORRECT_WORD_MESSAGE(solution)} isOpen={isGameLost} />\n      <Alert\n        message={successAlert}\n        isOpen={successAlert !== ''}\n        variant=\"success\"\n      />\n    </div>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}